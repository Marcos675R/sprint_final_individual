-- MySQL Script generated by MySQL Workbench
-- Tue Oct  5 22:12:15 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Sprint_final_individual
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `Sprint_final_individual` ;

-- -----------------------------------------------------
-- Schema Sprint_final_individual
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Sprint_final_individual` DEFAULT CHARACTER SET utf8 ;
SHOW WARNINGS;
USE `Sprint_final_individual` ;

-- -----------------------------------------------------
-- Table `operario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `operario` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `operario` (
  `id_operario` INT NOT NULL,
  `nombre` VARCHAR(40) NOT NULL,
  `apellido` VARCHAR(45) NOT NULL,
  `edad` INT NOT NULL,
  `correo` VARCHAR(45) NOT NULL,
  `ticket` INT NOT NULL,
  PRIMARY KEY (`id_operario`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `soporte`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `soporte` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `soporte` (
  `id_operario` INT NOT NULL,
  `id_usuario` INT NOT NULL,
  `fecha_inicio` DATE NOT NULL,
  `evaluacion` INT NOT NULL,
  `id_soporte` INT NOT NULL,
  PRIMARY KEY (`id_soporte`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `usuario` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `usuario` (
  `nombre` VARCHAR(45) NOT NULL,
  `apellido` VARCHAR(45) NOT NULL,
  `edad` INT NOT NULL,
  `correo` VARCHAR(45) NOT NULL,
  `ingresos` INT NOT NULL,
  `id_usuario` INT NOT NULL,
  PRIMARY KEY (`id_usuario`))
ENGINE = InnoDB;

SHOW WARNINGS;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


/*Construya una base de datos. Asigne un usuario con todos los privilegios. Construya las tablas. Agregue
5 usuarios, 5 operadores y 10 operaciones de soporte. Los datos debe crearlos según su imaginación.*/

SELECT*FROM usuario;
insert into usuario (nombre, apellido, edad, correo, ingresos,id_usuario)
 values ( 'Pedro', 'Diaz',34, 'pedro@gmail.com',2,1),
( 'Alexis', 'Sanchez',48, 'alexis@gmail.com',4,2 ),
( 'Arturo', 'Vidal',24, 'arturo@gmail.com',5 ,3),
('Ben', 'Brereton',27,'ben10@gmail.com' ,5,4),
('Marcelo', 'Salas',56, 'salas@gmail.com',6,5);

SELECT*FROM operario;
insert into operario (id_operario, nombre, apellido, edad, correo, ticket)
 values 
 ('1', 'Juan', 'Perez', '34','maeillanes@hotmail.com', '123'),
('2', 'Carlos', 'Silva', '37', 'osabarca@hotmail.com','456'),
('3', 'Ximena', 'Puga', '27','cabrigo@garmendia.cl', '789'),
('4', 'Pedro', 'Correa',  '28','jl.nashxo.sk34@hotmail.com', '145'),
('5', 'juan', 'Correa', '30','capitanaguilera@hotmail.com', '146');

select * from soporte;
insert into soporte ( id_operario,id_usuario, fecha_inicio, evaluacion, id_soporte )
values	(3,1,'2021-09-21',5,101),
		(1,2,'2021-09-05',4,102),
        (2,3,'2021-09-08',3,103),
        (4,4,'2021-09-11',7,104),
        (5,5,'2021-09-15',7,105),
        (1,1,'2021-09-02',4,106),
        (3,2,'2021-09-17',5,107),
        (2,3,'2021-09-18',6,108),
        (4,4,'2021-09-19',6,109),
        (5,5,'2021-09-14',2,110);

/*- Seleccione las 3 operaciones con mejor evaluación.*/
select *from soporte;
select id_operario as operaciones_mejor_evaluacion, evaluacion
from soporte order by evaluacion desc limit 3;

/*Seleccione las 3 operaciones con menos evaluación.*/

select id_operario as operaciones_menor_evaluacion, evaluacion
from soporte order by evaluacion asc limit 3;

/*Seleccione al operario que más soportes ha realizado.*/
select id_operario, id_usuario, evaluacion from soporte 
where evaluacion = (select max(id_operario) from soporte);

/*Seleccione al cliente que menos veces ha utilizado la aplicación.*/
select * from soporte;
select id_usuario, count(*) from soporte group by id_usuario limit 1;

/*Agregue 10 años a los tres primeros usuarios registrados.*/
start transaction;
set autocommit=0;
update usuario set edad = edad + 10 where id_usuario in 
(1,2,3);
select * from usuario order by id_usuario asc limit 3;
set autocommit=1;
select *from operario;

/*Renombre todas las columnas ‘correo electrónico’. El nuevo nombre debe ser email.*/
alter table usuario rename column correo to email;
alter table operario rename column correo to email;

/*Seleccione solo los operarios mayores de 20 años.
	 Carolina, como mis operarios eran todos mayores de 20 use esta funcion para darle mas 
    sentido al ejercicio. 
*/

SELECT count(*),
CASE
WHEN edad < 30 THEN 'menores que 30'
WHEN edad < 40 THEN 'entre 30 y 40'
ELSE 'más de 40'
END
as `grupo de edad`
FROM operario
GROUP BY `grupo de edad`;


